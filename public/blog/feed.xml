<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://lelylan.com/</id>
  <title>Lelylan - reThink your house</title>
  <updated>2012-07-29T22:00:00Z</updated>
  <link rel="alternate" href="http://lelylan.com/"/>
  <link rel="self" href="http://lelylan.com/blog/feed.xml"/>
  <author>
    <name>Lelylan Team</name>
    <uri>http://lelylan.com</uri>
  </author>
  <entry>
    <id>tag:lelylan.com,2012-07-30:/blog/cosm/</id>
    <title type="html">Cosm (aka Pachube)</title>
    <published>2012-07-29T22:00:00Z</published>
    <updated>2012-07-29T22:00:00Z</updated>
    <link rel="alternate" href="http://lelylan.com/blog/cosm/"/>
    <content type="html">&lt;div class="article"&gt;

  &lt;br/&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="http://cosm.com"&gt;&lt;img class="thumbnail" src="/images/blog/cosm/header.png" alt="Cosm"&gt;&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
    COSM is a platform which enables you to store, share and discover real-time sensor, 
    energy and environment data from devices and sensors. Cosm provides most of its 
    functionality through its API, rather than through its web site, giving to developers
    a full set of services that we will be studying in this article.
  &lt;/p&gt;

  &lt;h2&gt;Once upon a time was Pachube&lt;/h2&gt;

  &lt;p&gt;
    When it started, around 4 years ago, its name was Pachube. It was ideally suited 
    for visualizing data from sensors connected to the physical world. The main concepts 
    on which Pachube came to life was two: feeds and datastreams.
  &lt;/p&gt;

    &lt;ul class="unstyled"&gt;
      &lt;li&gt;&lt;code&gt;Feeds&lt;/code&gt; Usually a location (e.g. office and house).&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;Datastreams&lt;/code&gt; The physical device associated to the location
        (e.g. sensors and power meters).&lt;/li&gt;
    &lt;/ul&gt;

  &lt;p&gt;
    Few months ago, it had a facelift and it changed its name to Cosm. Cosm is everything 
    you know and love about Pachube, with more power to connect and build the Internet of 
    Things today. The data about Cosm is quite impressive. It manages millions of datapoints 
    per day from thousands of individuals, organisations and companies around the world. Data 
    can be pushed from the sensor end, or pulled by the Cosm servers, with the data feeds 
    then made available in multiple formats at no charge.
  &lt;/p&gt;

  &lt;p&gt;
    In its new vest Cosm tries to to be a social network for the Internet of Things, but how
    reported &lt;a href="http://www.readwriteweb.com/archives/cosm-disappointing-re-design-by-internet-of-things-pioneer-pachube.php"&gt;Read Write Web&lt;/a&gt;,
    at least two problems raised. The first one is that Cosm tries to be now mainstream, it
    tries to be "for everybody", but it is not ready for this step. Its UI is not enough
    intuitive. Second, when you go into the console you can't do that much, at least if 
    you do not have an Arduino. After a while you just leave it. This is an extract I really 
    like of the RWW article.
  &lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;
    I'm being a little hard on Cosm, because I was expecting something more user friendly. However, 
    I still buy into the vision for Cosm. In the not too distant future, we will indeed manage various 
    feeds from household and other devices...
    &lt;/p&gt;
  &lt;/blockquote&gt;

  &lt;p&gt;
    After studying their APIs we think Cosm is a great product. It has almost all
    the services needed to build the Internet of Thing and when hardware producers will
    realize that, it will start making big numbers. Enough introduction, it's API time.
  &lt;/p&gt;

  &lt;h2&gt;Cosm APIs&lt;/h2&gt;

  &lt;p&gt;
    The &lt;a href="https://cosm.com/docs/quickstart"&gt;API documentation&lt;/a&gt; is complete. There is 
    quickstart that let you create your first feed following a step by step wizard. Although it
    is clear and well prepared, we didn't like the idea of importing the Twitter feed in Cosm as
    first example as it's not a use case for the Internet of Things. This said lets dig into the 
    services.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/v2/feed/"&gt;FEEDS&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Represents a group of datastreams. It is used to represent some locations like your 
    house or your office. Interesting the ability to tag the feeds to make them easily 
    searchable and also the ability to set latitude and longitude to enable geospatial queries.
  &lt;p&gt;
  
  &lt;h3&gt;&lt;a href="https://cosm.com/docs/v2/datastream/"&gt;DATASTREAMS&lt;/a&gt;&lt;/h3&gt;
  
  &lt;p&gt;
    A datastream represents an individual sensor/device stream within an environment like
    powermeters, lights or geiger counters. In here the values related to the physical 
    device properties are stored.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/v2/datapoint/"&gt;DATAPOINTS&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    A datapoint represents the value in a specific moment of the datastream life. This 
    enables you to insert datapoints into the history of the datastream.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/v2/api_key/"&gt;API KEYS&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Cosm lets you create API keys with granular permissions. Keys are composed of different 
    sets of permissions, so for example a key could be created that allows read only access 
    all public resources or allows write access to one specific feed, from one specific IP 
    address. Those are the most important properties in the key resource.
  &lt;/p&gt;

  &lt;ul class="unstyled"&gt;
    &lt;li&gt;&lt;code&gt;expires_at&lt;/code&gt; Gives a temporary limit.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;private_access&lt;/code&gt; Flag if this key can access private resources.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;permissions&lt;/code&gt; List of access level.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
    The permission structure is itself another resource where hose are the most interesting 
    properties you should be aware of.
  &lt;/p&gt;

  &lt;ul class="unstyled"&gt;
    &lt;li&gt;&lt;code&gt;access_method&lt;/code&gt; An array containing one or more of [get, put, post, delete].&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;source_ip&lt;/code&gt; An IP address that access should be restricted to,
    &lt;li&gt;&lt;code&gt;minimum_interval&lt;/code&gt; Can be used to create a key that can only request data 
      with a certain resolution.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;resources&lt;/code&gt; An optional collection of resources restricting access 
      to specific feeds or datastreams.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/v2/trigger/"&gt;TRIGGERS&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Triggers fire HTTP POST requests to a URL of your choice when conditions that you 
    set up on a datastream have been satisfied (e.g. value change, value exceeds threshold, 
    value equals, etc.).
  &lt;/p&gt;

  &lt;p&gt;
    This service can be useful in different scenarios. For example to turn off the cooling 
    system when a window is open or when the water for your flowers is finished. In this way,
    using a webhook mechanism you can connect Cosm feeds and datastreams with any other app.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/v2/user/"&gt;USERS&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    User are ideally a powerful concept, as there are some situations where you have
    to create new people, so that you can let them access your resources for a limited 
    period of time. Unluckily the resource is not open and you have to make request to 
    Cosm if you want to use it.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/v2/history.html"&gt;HISTORICAL QUERY&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Gives the ability to make queries for ranges of historical data at datastream level
    as well as at the environment level, using formatted dates. The API lets you set the
    param &lt;code&gt;interval&lt;/code&gt;, which can be pretty useful to reduce the amount of retrieved
    data letting you get back the historical resources with intervals of 30 seconds, one minute,
    5 minutes and so on.
  &lt;/p&gt;


  &lt;h2&gt;Beta features&lt;/h2&gt;

  &lt;p&gt;
    Cosm is delivering also different &lt;a href="https://cosm.com/docs/beta/"&gt;beta&lt;/a&gt; features, 
    which are just delicious.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/beta/group/"&gt;GROUPS&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Groups can be used for two main reasons: organize both users and feeds, and create 
    more advanced access rules for private feeds. If used rightly, they can make your 
    system much more flexible and open the other users.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/beta/permission/"&gt;PERMISSIONS&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    The permissions API allows you to get information about what an API Key is allowed to 
    do.
  &lt;p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/beta/socket_server/"&gt;SOCKET SERVER&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Paws is the Cosm Advanced Web-scale Socket-server. It is designed to make writing 
    clients which require real-time push notifications as easy as possible.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/beta/mqtt/"&gt;MQTT&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    The Cosm MQTT Bridge is a simple way to interact with Cosm directly from any MQTT
    enabled platform. It provides full API interaction, as well as push notifications
    and subscriptions.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="https://cosm.com/docs/beta/oauth/"&gt;OAUTH2&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    OAuth2 is a method for allowing third-party application access to your resources 
    without giving them access to your username and password. It is used by most major 
    websites including Facebook and Twitter and its biggest strength lies on its ability 
    to let the user have a full control of its resources.
  &lt;/p&gt;

  &lt;h2&gt;Provisioning beta. A delicious service&lt;/h2&gt;

  &lt;p&gt;
    The &lt;a href="https://cosm.com/docs/beta/device_management/provisioning/"&gt;provisioning&lt;/a&gt; 
    service is just awesome. Provisioning is the process of a device getting its configuration 
    in order to be able to send data to Cosm. This service simplify our lives when thinking 
    at the physical world allowing the owner of the device to 'claim' it. For example once 
    your device is plugged in and online, you might go to its website, enter your serial 
    number and claim it there, and this would all be done using the provisioning APIs.
  &lt;/p&gt;

  &lt;p&gt;
    When the physical device is plugged in this is what happens.
  &lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;It sends an activation code to the provisioning API.&lt;/li&gt;
    &lt;li&gt;The API creates a feed (which can be preconfigured).&lt;/li&gt;
    &lt;li&gt;The API creates an API key that is sent to the device. This key will be used by 
      the physical device to authenticate itself when sending updates.&lt;/li&gt;
  &lt;/ol&gt;

  &lt;p&gt;
    Without getting into the details Cosm let you define two resources. The first one is the 
    &lt;a href="https://cosm.com/docs/beta/device_management/api/device_model/"&gt;Device Model&lt;/a&gt; 
    and it represents a class of devices, like the "Boxee" and the second is 
    &lt;a href="https://cosm.com/docs/beta/device_management/api/device/"&gt;Device&lt;/a&gt;, 
    which represents an individual device with its own serial number.
  &lt;/p&gt;

  &lt;p&gt;
    Without going further, go and read the &lt;a href="https://cosm.com/docs/beta/device_management/provisioning/"&gt;documentation&lt;/a&gt;.
    It will worth it.
  &lt;/p&gt;

  &lt;h2&gt;Conclusions&lt;/h2&gt;

  &lt;p&gt;
    As we said before the Cosm API documentation is complete and they offer all the services
    we need to build the Internet of Things. We are sure that next year, when more hardware 
    will arise on top of Cosm, great results will come.
  &lt;/p&gt;

  &lt;p&gt;
    As always there are some spots for improvements. In particular there were some errors on 
    the documentation on the datastream curl examples, and we found the documentation way too
    verbose on describing some basic concepts. It would be way better to have some real examples
    describing advanced usage scenarios.
  &lt;/p&gt;

  &lt;p&gt;
    About the API design, Cosm has been following the REST architecture, but the connectedness 
    has not been respected. It would be really nice to have, for example, the datastream links
    into the feed representations. Sure, they are details, but we care about this, don't we? :)
  &lt;/p&gt;

  &lt;p&gt;
    Tell us what you think and which one is the next Internet of Things startup you want us to 
    check, as this is the first article of a series that want to get in deep on how Internet of
    Things APIs are built.
  &lt;/p&gt;

&lt;/div&gt;</content>
  </entry>
  <entry>
    <id>tag:lelylan.com,2012-07-16:/blog/boards/</id>
    <title type="html">Hacking the House</title>
    <published>2012-07-15T22:00:00Z</published>
    <updated>2012-07-15T22:00:00Z</updated>
    <link rel="alternate" href="http://lelylan.com/blog/boards/"/>
    <content type="html">&lt;div class="article"&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;img class="thumbnail header" src="/images/blog/boards/header.png" alt="Building your house hub"&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  
  &lt;p&gt;
    Have you ever wished to make your house accessible from the web? 
    In the &lt;a href="/blog/electronics/"&gt;previous article&lt;/a&gt; we pointed out the existing 
    solutions to hack a device with boards like Arduino or Nanode. Anyway those solutions 
    are not (yet) powerful enough to build a secure home automation hub.
  &lt;/p&gt;

  &lt;p&gt;
    &lt;!--We wrote an &lt;a href="/blog/access/"&gt;article talking about this&lt;/a&gt;.--&gt;
    Now it's time to find out more powerful solutions to build an home automation hub which 
    let all of your devices communicate with the web.
  &lt;/p&gt;

  &lt;h3&gt;&lt;a href="http://www.raspberrypi.org/"&gt;Raspberry PI&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    This is probably the best solution out there. It's a real computer where you can run 
    Debian Linux at only $25. The initiative, started at Cambridge University got lot of 
    attention from all media around the world and in 4 months they were able to sell over
    500.000 pieces.
  &lt;/p&gt;

  &lt;table class="zebra-striped"&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Price&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Raspberry PI | $25 &lt;br/&gt;
          Raspberry Model B | $35 &lt;br/&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;OS&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Debian Linux. &lt;a href="http://www.raspberrypi.org/downloads"&gt;See other distributions&lt;/a&gt;.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Connectivity&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          The base version does not offer connectivity.&lt;br/&gt;
          Raspberry Model B&lt;/a&gt; gives you an Ethernet access.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Pros&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Low price, community, documentation, open-source.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Cons&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Computational power, wireless connectivity.
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

  &lt;h3&gt;&lt;a href="http://www.rikomagic.co.uk/"&gt;Rikomagic MK802&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    A fully functional computer no bigger than a USB pen drive, the Rikomagic MK802 runs on 
    the popular Android 4 operating system and it features Wifi. The design is just cool and 
    you have a fully functional computer no bigger than a USB pen drive.
  &lt;/p&gt;

  &lt;table class="zebra-striped"&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Price&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          MK802 | $74
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;OS&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Android 4.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Connectivity&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Wifi 802.11b/g/n.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Pros&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Low price, wireless connectivity, design.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Cons&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Missing community, documentation, computational power.
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

  &lt;h3&gt;&lt;a href="http://liliputing.com/2012/03/mele-a1000-is-a-70-hackable-linux-friendly-arm-based-pc.html"&gt;Mele A1000&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Available for as little as $70, while that's twice the price of a Raspberry Pi computer, 
    the Mele A1000 includes a faster processor, more RAM and a case. It can be a better choice
    if the power given by the Raspberry PI is not enough and you need something aesthetically 
    nice.
  &lt;/p&gt;

  &lt;table class="zebra-striped"&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Price&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Mele A1000 | $70
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;OS&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Android and Ubuntu.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Connectivity&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Ethernet by default.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Pros&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Low price.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Cons&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Missing community, wireless connectivity, computational power.
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

  &lt;h3&gt;&lt;a href="http://beagleboard.org/"&gt;BeagleBoard&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    The BeagleBoard is a low cost, high performance, low power 
    &lt;a href="http://www.ti.com/omapwireless"&gt;OMAP3&lt;/a&gt; based platform designed 
    by BeagleBoard.org community members. It is open-source and there are hundreds of
    applications developed on top of it.
  &lt;/p&gt;

  &lt;table class="zebra-striped"&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Price&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          BeagleBone | $89 &lt;br/&gt;
          BeagleBoard xM | $149 
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;OS&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Android, and major Linux distributions like Ubuntu, Debian, ArchLinux and Gentoo. 
          &lt;a href="http://pandaboard.org/content/resources/software"&gt;See supported distributions&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Connectivity&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Ethernet by default.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Pros&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Experience, community, documentation, computational power, open-source.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Cons&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Price, wireless connectivity.
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

  &lt;h3&gt;&lt;a href="http://pandaboard.org//"&gt;PandaBoard ES&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    PandaBoard is a low-cost, open &lt;a href="http://www.ti.com/omapwireless"&gt;OMAP 4&lt;/a&gt; mobile 
    software development platform.
  &lt;/p&gt;

  &lt;table class="zebra-striped"&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Price&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          PandaBoard ES | $189
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;OS&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Android, Ubuntu and Linaro.
          &lt;a href="http://pandaboard.org/content/resources/software"&gt;See supported distributions&lt;/a&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Connectivity&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Ethernet connectivity and Wifi 802.11 b/g/n.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Pros&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Community, computational power, wireless connectivity, focus on mobile.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Cons&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Price.
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

  &lt;h3&gt;&lt;a href="http://www.plugcomputer.org/"&gt;Plug Computers (Sheevaplug)&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Main resource for the plug computer development community. Plugcomputer.org
    offers solutions built on a Marvell system-on-chip and focus on high performances and giving
    full connected devices readily available for developers.
  &lt;/p&gt;

  &lt;table class="zebra-striped"&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Price&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          GuruPlug Display | $199 &lt;br/&gt;
          D2Plug | $249
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;OS&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Ubuntu, FreeBSD, NetBSD, Windows CE and any other operating system that is compatible 
          with ARM CPUs.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Connectivity&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Ethernet connectivity by default.
          Model D2Plug offers integrated 802.11 b/g/n Wifi.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Pros&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Commercial support, computational power, design, wireless connectivity.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Cons&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Missing community, closed-source, price.
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

  &lt;h3&gt;&lt;a href="http://www.ionicsplug.com/"&gt;Ionics Plug&lt;/a&gt;&lt;/h3&gt;

  &lt;p&gt;
    Plug computer with main focus on connectivity and low price. Ionics, comes from the same
    family of Sheevaplug computers, but with lower prices and better features. For sure one 
    of the best solutions whenever you want to use a Plug Computer and you are searching for
    advanced wireless capabilities (WifI, Zigbee and Z-Wave ).
  &lt;/p&gt;

  &lt;table class="zebra-striped"&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Price&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Nimbus 100 | $99 &lt;br/&gt;
          Stratus | $149
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;OS&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Debian 5 Lenny.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Connectivity&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Ethernet connectivity by default.
          Stratus model offers integrated 802.11 b/g (WPS support on Client Mode) and ZigBee.
          You can decide to change the Zigbee module for a Z-wave module.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Pros&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Commercial support, computational power, design, price, wireless connectivity.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td class="parameter"&gt;
          &lt;span&gt;Cons&lt;/span&gt;
        &lt;/td&gt;
        &lt;td&gt;
          Missing community, closed-source.
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

  &lt;/br&gt;
  &lt;h2&gt;Considerations&lt;/h2&gt;
  &lt;p&gt;
    This is an opinionated list with the best solutions out there. If you think we are missing
    a good one  write a comment or &lt;a href="/about/"&gt;get in touch&lt;/a&gt; with us.
  &lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <id>tag:lelylan.com,2012-03-09:/blog/electronics/</id>
    <title type="html">Hacking the Internet of Things</title>
    <published>2012-03-08T23:00:00Z</published>
    <updated>2012-03-08T23:00:00Z</updated>
    <link rel="alternate" href="http://lelylan.com/blog/electronics/"/>
    <content type="html">&lt;div class="article"&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="#"&gt;
        &lt;img class="thumbnail" src="/images/blog/electronics/header.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  
  &lt;p&gt;
    When you connect devices to the web you face different issues. The first one is to 
    understand which is the best electronic device to use. In Lelylan we are experimenting 
    physical nodes, devices that defines a set of web services to connect your house to the web.
  &lt;/p&gt;

  &lt;p&gt;
    In order to build a physical node you can use different hardware solutions varying on 
    &lt;a href="http://beyondthekeeboard.wordpress.com/2011/06/25/a-simple-overview-to-help-choose-your-hardware-for-internet-of-things-solutions/"&gt;computational power, wireless capability and budget&lt;/a&gt;. 
    The only required thing is the ability to build a web server that accepts and send 
    requests over the internet.
  &lt;/p&gt;



  &lt;br/&gt;
  &lt;h2&gt;&lt;a href="http://arduino.cc"&gt;Arduino&lt;/a&gt;&lt;/h2&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="http://arduino.cc"&gt;
        &lt;img class="thumbnail" src="/images/blog/electronics/arduino.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
    &lt;strong&gt;Description&lt;/strong&gt;:
    open-source electronics prototyping platform based on flexible, easy-to-use 
    hardware and software. It's intended for artists, designers, hobbyists, and 
    anyone interested in creating interactive objects or environments. It can be
    connected to the internet using 
    &lt;a href="http://store.arduino.cc/it/index.php?main_page=product_info&amp;cPath=11_12&amp;products_id=141"&gt;ethernet&lt;/a&gt;, 
    &lt;a href="http://store.arduino.cc/it/index.php?main_page=product_info&amp;cPath=11_5&amp;products_id=5"&gt;zigbee&lt;/a&gt;, 
    &lt;a href="http://www.sparkfun.com/products/9954"&gt;wifi&lt;/a&gt; and more.
  &lt;/p&gt;

  &lt;p&gt;
    &lt;strong&gt;Good&lt;/strong&gt;:
    big community, open-source hw, cheap, documentation.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Bad&lt;/strong&gt;:
    computational power.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Prices&lt;/strong&gt;: 
    &lt;strong&gt;base&lt;/strong&gt;
      &lt;a href="http://store.arduino.cc/it/index.php?main_page=product_info&amp;cPath=11_12&amp;products_id=195"&gt;~ $30&lt;/a&gt;,
    &lt;strong&gt;ethernet&lt;/strong&gt;
      &lt;a href="http://store.arduino.cc/it/index.php?main_page=product_info&amp;cPath=11_12&amp;products_id=141"&gt;~ $60&lt;/a&gt;,
    &lt;strong&gt;wifi&lt;/strong&gt;
      &lt;a href="http://www.sparkfun.com/products/9954"&gt;~ $120&lt;/a&gt; and
    &lt;strong&gt;zigbee&lt;/strong&gt; 
      &lt;a href="http://store.arduino.cc/it/index.php?main_page=product_info&amp;cPath=11_5&amp;products_id=5"&gt;~ $75&lt;/a&gt; 
      (including &lt;a href="http://www.sparkfun.com/products/8664"&gt;XBee Antenna&lt;/a&gt;).
  &lt;/p&gt;



  &lt;br/&gt;
  &lt;h2&gt;&lt;a href="http://nanode.eu/"&gt;Nanode&lt;/a&gt;&lt;/h2&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="http://nanode.eu/"&gt;
        &lt;img class="thumbnail" src="/images/blog/electronics/nanode.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
    &lt;strong&gt;Description&lt;/strong&gt;:
    open source Arduino-like board that has in-built web connectivity. It connects to a range 
    of wireless, wired and ethernet interfaces. It allows you to develop web based sensors and 
    control systems, giving you web access to six analogue sensor lines and six digital I/O 
    lines. Nanode was designed with hacking in mind.
  &lt;/p&gt;

  &lt;p&gt;
    &lt;strong&gt;Good&lt;/strong&gt;:
    built-in web connectivity, open-source hw, really cheap, arduino compatible.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Bad&lt;/strong&gt;:
    computational power, documentation.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Prices&lt;/strong&gt;:
    &lt;strong&gt;ethernet&lt;/strong&gt; &lt;a href="http://nanode.eu/buy"&gt;~ $40&lt;/a&gt; and
    &lt;strong&gt;wireless&lt;/strong&gt; &lt;a href="http://nanode.eu/buy"&gt;~ $48&lt;/a&gt; 
    (uses &lt;a href="http://www.sparkfun.com/products/9582"&gt;RFM12B wireless transceiver&lt;/a&gt;).
  &lt;/p&gt;



  &lt;br/&gt;
  &lt;h2&gt;&lt;a href="http://www.openpicus.com"&gt;openPICUS&lt;/a&gt;&lt;/h2&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="http://www.openpicus.com"&gt;
        &lt;img class="thumbnail" src="/images/blog/electronics/openpicus.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
    &lt;strong&gt;Description&lt;/strong&gt;:
    defines itself as Internet freedom for your things, control and communication for 
    electronic devices. A standalone hardware and software platform for embedded applications 
    to interact via web, email or messages with simple sensors or complex electronic equipment.
  &lt;/p&gt;

  &lt;p&gt;
    &lt;strong&gt;Good&lt;/strong&gt;:
    built-in web connectivity, cheap, good documentation, support.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Bad&lt;/strong&gt;:
    computational power, development windows oriented.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Price&lt;/strong&gt;:
    &lt;strong&gt;wifi&lt;/strong&gt;
    &lt;a href="http://www.eikonsite.it/openpicus/prodotti.aspx?cprod=015365"&gt;~ $90&lt;/a&gt;.
  &lt;/p&gt;



  &lt;br/&gt;
  &lt;h2&gt;&lt;a href="http://www.netduino.com"&gt;Netduino&lt;/a&gt;&lt;/h2&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="http://www.netduino.com/"&gt;
        &lt;img class="thumbnail" src="/images/blog/electronics/netduino.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
    &lt;strong&gt;Description&lt;/strong&gt;:
    open-source electronics platform using the .NET Micro Framework. With Netduino, the world 
    of microcontroller programming can be easily aproached by people programming with .NET.  
    Netduino is designed to enable both personal projects and sophisticated commercial endeavors. 
  &lt;/p&gt;

  &lt;p&gt;
    &lt;strong&gt;Good&lt;/strong&gt;:
    open-source hw, cheap, documentation, arduino compatible, .NET programming.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Bad&lt;/strong&gt;:
    computational power.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Prices&lt;/strong&gt;: 
    &lt;strong&gt;base&lt;/strong&gt;
      &lt;a href="http://www.sparkfun.com/products/10107"&lt;/a&gt;~ $35&lt;/a&gt;,
    &lt;strong&gt;ethernet&lt;/strong&gt;
      &lt;a href="http://www.sparkfun.com/products/10186"&gt;~ $60&lt;/a&gt;,
    &lt;strong&gt;wifi&lt;/strong&gt;
      &lt;a href="http://www.sparkfun.com/products/9954"&gt;~ $120&lt;/a&gt; and
    &lt;strong&gt;zigbee&lt;/strong&gt; 
      &lt;a href="http://store.arduino.cc/it/index.php?main_page=product_info&amp;cPath=11_5&amp;products_id=5"&gt;~ $75&lt;/a&gt; 
      (including &lt;a href="http://www.sparkfun.com/products/8664"&gt;XBee Antenna&lt;/a&gt;).
  &lt;/p&gt;



  &lt;br/&gt;
  &lt;h2&gt;&lt;a href="http://www.libelium.com/"&gt;Libelium Waspmote&lt;/a&gt;&lt;/h2&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="http://www.libelium.com/"&gt;
        &lt;img class="thumbnail" src="/images/blog/electronics/libelium.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
    &lt;strong&gt;Description&lt;/strong&gt;:
    sensor device developers oriented. It works with different communicaction protocols 
    (ZigBee, wifi, Bluetooth and GPRS) and frequencies (2.4GHz, 868MHz, 900MHz) and creates
    links up to 12Km. Using the hibernate low power mode (0.7uA) it can save battery energy 
    when not transmitting and be able to work even for years. Waspmote is compatible with 
    more than 50 sensors and its open source IDE makes really easy to start working with it
  &lt;/p&gt;

  &lt;p&gt;
    &lt;strong&gt;Good&lt;/strong&gt;:
    documentation, solid,
    &lt;a href="http://www.libelium.com/products/waspmote/hardware"&gt;radio boards&lt;/a&gt;,
    &lt;a href="http://www.libelium.com/products/waspmote/sensors"&gt;sensors boards&lt;/a&gt;,
    &lt;a href="http://www.libelium.com/products/waspmote/OTA"&gt;over the air programming&lt;/a&gt;,
    libelium support.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Bad&lt;/strong&gt;:
    computational power, expensive.
  &lt;/p&gt;
  &lt;p&gt;
    &lt;strong&gt;Price&lt;/strong&gt;: 
    &lt;strong&gt;zigbee&lt;/strong&gt;
    &lt;a href="http://www.libelium.com/products/waspmote"&lt;/a&gt;~ $180&lt;/a&gt;,
    &lt;strong&gt;wifi&lt;/strong&gt;
    &lt;a href="http://www.libelium.com/products/waspmote"&lt;/a&gt;~ $200&lt;/a&gt;.
    The price catalog can be found &lt;a href="http://www.libelium.com/xhjs76gd/libelium_products_catalogue.pdf"&gt;here&lt;/a&gt;
  &lt;/p&gt;

  &lt;/br&gt;
  &lt;h2&gt;Considerations&lt;/h2&gt;
  &lt;p&gt;
    This is an opinionated list with the best solutions out there. If you think we are missing
    a good one you can head over to &lt;a href="http://news.ycombinator.com/item?id=3683978"&gt;Hacker 
    News&lt;/a&gt; to discuss it.
  &lt;/p&gt;
  &lt;p&gt;
    This is the first of two articles. In the next one we will be featuring 
    hardware solutions with more computational power like
    &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; and
    &lt;a href="http://pandaboard.org/"&gt;Panda Board&lt;/a&gt;, which are perfect to define hubs that
    communicate with the web and all the devices in your house.
    Here the link for the &lt;a href="/blog/boards/"&gt;second part&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <id>tag:lelylan.com,2012-02-29:/blog/wish/</id>
    <title type="html">Dreaming the Connected Home</title>
    <published>2012-02-28T23:00:00Z</published>
    <updated>2012-02-28T23:00:00Z</updated>
    <link rel="alternate" href="http://lelylan.com/blog/wish/"/>
    <content type="html">&lt;div class="article"&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="#"&gt;
        &lt;img class="thumbnail" src="/images/blog/wish.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  
  &lt;p&gt;
    You are sitting in front of your TV set, while watching the last fresh action movie. 
    The hero bombs some bad guy, while your iPad is off, near the couch. Suddenly it turns 
    on, and 3 notifications get your attention.
  &lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;
      The &lt;strong&gt;air conditioning system&lt;/strong&gt; from the bedroom says it is scheduled to warm 
      the room in 10 minutes. The movie you are watching on your tv-set would last another hour, 
      so it is asking you "do you want me to be suspended for about 40 minutes more?"
    &lt;/li&gt;
    &lt;li&gt;
      The &lt;strong&gt;coffee machine&lt;/strong&gt; sends a message saying "ready to prepare coffee, 
      tomorrow morning at 7.00am. There is just two shots left on".
    &lt;/li&gt;
    &lt;li&gt;
      The 5 &lt;strong&gt;sensors around the house&lt;/strong&gt; sent their hourly set of measures: 20 
      degrees, 30% humidity, lights off, noise level outside about normal value.
    &lt;/li&gt;
  &lt;/ol&gt;

  &lt;p&gt;
    You answer to the air condition system in a few clicks, then you forward the message 
    from coffee machine to your personal office email (remind tomorrow to buy coffee). 
    And keep enjoying the movie. Do you like this story? Do you know it is possible at a very 
    cheap price? Let’s dig more in.
  &lt;/p&gt;  

  &lt;h3&gt;First case: a scary future.&lt;/h3&gt;

  &lt;p&gt;
    Imagine a future where the &lt;a href="http://www.readwriteweb.com/archives/internet-of-things/"&gt;
    Connected Home&lt;/a&gt; of our dream rest on "Manufacturer-Oriented" devices. Your devices are 
    someway working smoothly through Internet, each one sending messages you are not allowed to 
    access, owned by a different company (each manufacturer plans, builds and manage a different 
    system, code and instructions set). 
  &lt;/p&gt;

  &lt;p&gt;
    Your neighbour has found easily your passwords, because you need to create and use so many 
    of them, so they all look similar. Same password you submit to connect on facebook, and 
    your neighbour’s fake online dating service. And your neighbour hates you, because you earn 
    more than him. He just plays with you, turning on and off the air conditioning during the 
    night, to give you some hard time. And the coffee machine spilled too much coffee out, getting everything dirty.
  &lt;/p&gt;

  &lt;p&gt;
    When you notice what’s going on, you got fever twice, but finally the new password keeps him 
    out of your house.
  &lt;/p&gt;


  &lt;h3&gt;
    Second case: the house at your service.
  &lt;/h3&gt;

  &lt;p&gt;
    Imagine a a future where the Internet of Things is built with privacy concerns in mind, 
    only for you. Your devices are working smoothly, through Internet, each one sending a 
    standard message to your account, which you read on mobile, on the tablet, on computer. 
    Anywhere.
  &lt;/p&gt;

  &lt;p&gt;
    You enjoy your movie. You get comfortable with the all-tech-house system. And you praise 
    those guys who spent their time creating beautiful applications for your china-cheap devices, 
    instead of sitting idle watching their sf-favorite movie (you know, those star trek, matrix, 
    star wars stories).
  &lt;/p&gt;


  &lt;h3&gt;
    How Is It Going To Happen and what You should do.
  &lt;/h3&gt;

  &lt;p&gt;
    At Lelylan we are studying how to build some application to let all your devices 
    play and talk easily, without the need to spend one cents more! If you want to speed 
    it up, here is what you can do.
  &lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;
      Leave a comment, sharing your experience. Do you have already some devices? Are you
      planning to buy some in the next future? Which devices do you want to connect?
    &lt;/li&gt;
    &lt;li&gt;
      Say aloud your ideas about How You Would Like It, if Tomorrow You Get It. Funny stories 
      required!
    &lt;/li&gt;
    &lt;li&gt;
      Check with friends how much they’ll envy you, as soon as you get it.
    &lt;/li&gt;
  &lt;/ol&gt;


  &lt;h3&gt;
    It’s all about you.
  &lt;/h3&gt;

  &lt;p&gt;
  &lt;strong&gt;More you do, more you get.&lt;/strong&gt; Thanks a lot.
  &lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <id>tag:lelylan.com,2012-01-17:/blog/simplify/</id>
    <title type="html">Simplifying the Connected Home</title>
    <published>2012-01-16T23:00:00Z</published>
    <updated>2012-01-16T23:00:00Z</updated>
    <link rel="alternate" href="http://lelylan.com/blog/simplify/"/>
    <content type="html">&lt;div class="article"&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="#"&gt;
        &lt;img class="thumbnail" src="/images/blog/simplify/simplify.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
    
  &lt;p&gt;
    One reason home automation is not getting off the ground is &lt;strong&gt;complexity&lt;/strong&gt;. 
    I'm sure most of the experts working in the fields deny this, but they are lying :) Why? 
  &lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt; 
      We need them to build the connected house.
    &lt;/li&gt;
    &lt;li&gt; 
      If we want to extend the connected house we need to learn a protocol. 
      Trying to understand all of those 0x#09fa! codes will take a loooooong time.
    &lt;/li&gt;
    &lt;li&gt;
      Everyday a new standard pops up, as the solution to all our pains.
      Actually, no de facto standard exists today.
    &lt;/li&gt;
  &lt;/ol&gt; 

  &lt;p&gt;
    The raising question is: &lt;strong&gt;how can we improve this situation?&lt;/strong&gt;
    &lt;br/&gt;
    The answer is:&lt;strong&gt; simple, using the web.&lt;/strong&gt;
  &lt;/p&gt; 

  &lt;p&gt;
    Really. Think at a reason not to do it. It's easy, extensible, interoperable 
    and full of people developing cool ideas every single day on top of it.
  &lt;/p&gt;

  &lt;p&gt;
    Using a platform based on a set of REST web services enable you to access all 
    home automation resources (devices, locations, people and more). Every device is
    mapped to a unique URI which will provide control over it. When such a connection 
    is done, technological limitations disappear and devices become identifiable only 
    through their functionalities. No more headache, just easy stuff.
  &lt;/p&gt;

  &lt;ul class="media-grid"&gt;
    &lt;li&gt;
      &lt;a href="#"&gt;
        &lt;img class="thumbnail" src="/images/blog/simplify/1.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="#"&gt;
        &lt;img class="thumbnail" src="/images/blog/simplify/2.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="#"&gt;
        &lt;img class="thumbnail" src="/images/blog/simplify/3.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="#"&gt;
        &lt;img class="thumbnail" src="/images/blog/simplify/4.png" alt=""&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
    As you can see on the sample pics a URI can be used to monitor and control everything. 
    You don't need anything else to build your connected house. In this way everyone working 
    in the web can start working on home automation creating &lt;a href="/collaborations/"&gt;
    new cool solutions&lt;/a&gt;.
  &lt;/p&gt;

&lt;/div&gt;</content>
  </entry>
</feed>
